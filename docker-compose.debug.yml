# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.4'

services:
  webapplication2:
    container_name: webapplication2
    image: webapplication2
    hostname: webapplication2
    build:
      context: .
      dockerfile: WebApplication2/Dockerfile
    ports:
      - 8010:8080
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - WORKER_URL=http://host.docker.internal:8020
      - RABBITMQ_HOST=host.docker.internal
      - ZIPKIN_URL=http://host.docker.internal:9411
      - ConnectionStrings__AppDbConnection=Server=host.docker.internal,1433;User Id=sa;Password=P@ssw0rd;Encrypt=false;Database=AppDb
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
    depends_on: 
      - rabbitmq

  worker:
    container_name: worker
    image: worker
    hostname: worker
    build:
      context: .
      dockerfile: Worker/Dockerfile
    ports:
      - 8020:8080
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - WEBAPPLICATION2_URL=http://host.docker.internal:8010
      - RABBITMQ_HOST=host.docker.internal
      - ZIPKIN_URL=http://host.docker.internal:9411
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
    depends_on: 
      - rabbitmq

  mssql:
    container_name: mssql
    image: mcr.microsoft.com/azure-sql-edge:latest
    cap_add: [ 'SYS_PTRACE' ]
    environment:
      - "MSSQL_SA_PASSWORD=P@ssw0rd"
      - "MSSQL_PID=Developer"
      - "ACCEPT_EULA=1"
    ports:
      - "1433:1433"
    hostname: mssql
    volumes:
      - "./.data/sql-edge:/var/opt/mssql"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_ERLANG_COOKIE=SomeRandomStringHere

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.local.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasource:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on: 
      - loki
      - prometheus

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

volumes:
  prom_data: